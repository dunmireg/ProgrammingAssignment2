q()
library(XML)
fileURL("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL, useInternal = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
sum(xpathSApply(rootNode, "//zipcode", xmlValue))
sum(xpathSApply(rootNode, "//zipcode", xmlValue) == 21231)
q()
1160 - 700 - 800 + 360
getwd()
cube(3)
cube(3)
getwd()
files.list()
list.files()
cube(3)
hmw2.R
load(hmw2.R)
}
3^3
print(cube(3))
cube <- function (x, n) {
)
cube(3)
cube <- function(x, n) {}
cube <- function (x, n) {x^3}
cube(3)
x <- 1:10
if (x >5) {x <- 0}
f(3)
add2 <- function(x, y) {
x + y
}
add2(2, 5)
above10 <- function(x) {
use <- x > 10
x[use]
}
source('~/hmw2.R')
z <- 10
f(3)
x <- 5
y <- if(x < 3) {NA} else {10}
y
swirl()
library(swirl)
rm(list=ls())
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Glenn")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(1:3, "X", "Y", "Z", sep="")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, spe = "-")
paste(LETTERS, 1:4, sep = "-")
getwd()
list.files()
./specdata/
)
./specdata
.../specdata
getPath(specdata)
setwd(specdata)
setwd("specdata")
getwd()
setwd(...)
setwd(.../specdata)
cd . . .
setwd("C:/Users/dunmireg/Documents")
read.csv("specdata")
setwd("specdata")
id <- 1:10
length(id)
id_new <- numeric(length = length(id))
id_new
id <- 70:72
seq_along(id)
source('~/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd("C:/Users/dunmireg/Documents")
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd("C:/Users/dunmireg/Documents")
source('~/pollutantmean.R')
read.csv("specdata")
directory <- "specdata"
getwd()
file.path(directory, 001.csv)
file.path(directory)
clear
clear()
read.csv("specdata/001")
read.csv("specdata/001.csv")
id <- 14
as.character(14)
x <- as.character(14)
x
x.length
x.length()
x <- paste("0", x)
x
x <- paste("0", x, sep = "")
x
x <- "14"
x <- paste("0", x, sep="")
x
x <- 14
x <- as.character(x)
x
x <- paste("0", x, sep = "")
x
source('~/pollutantmean.R')
pollutantmean(id = 70)
pollutantmean(id = 70:72)
source('~/pollutantmean.R')
pollutantmean(id = 4)
directory <- "specdata"
paste(directory, "004", ".csv", sep = "")
x <- paste(directory, "004", ".csv", sep = "")
read.csv(x)
x <- paste(directory, "/", "004", ".csv", sep = "")
x
read.csv(x)
data <- read.csv(x)
data$nitrate
mean(data$pollutant, na.rm = TRUE)
mean(data$nitrate, na.rm = TRUE)
source('~/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
id <- 1:10
length(10)
id
size(10)
size(id)
id.size()
id.length()
length(id)
source('~/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", id = 4)
source('~/pollutantmean.R')
pollutantmean("specdata", id = 4)
data <- read.csv("specdata/004.csv")
data
data$pollutant
pollutant <- "sulfate"
data$pollutant
name <- pollutant[1]
data$name
data[sulfate]
data$sulfate
pollutant <- "sulfate"
data$as.character(pollutant[1])
data[,pollutant]
source('~/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
data <- read.csv("specdata/004.csv")
pollutant <- nitrate
pollutant <- "nitrate"
work <- data[,pollutant]
bad <- is.na(work)
good <- work[!bad]
good
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
source('~/pollutantmean.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit
submit()
submit()
source("submitscript1.R")
getwd()
list.files()
source("submitscript1.R")
submit()
source('~/pollutantmean.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
quit
quit()
source('~/corr.R')
corr("specdata")
getwd()
files.list()
list.files()
source('~/complete.R')
source('~/corr.R')
corr("specdata")
source('~/corr.R')
corr("specdata")
/cor
?cor
source('~/corr.R')
corr("specdata", 150)
corr("specdata", 150)
source('~/corr.R')
source('~/corr.R')
corr("specdata", 150)
source('~/corr.R')
corr("specdata", 150)
source('~/corr.R')
corr("specdata", 150)
source('~/corr.R')
corr("specdata", 150)
c <- numeric()
c <- c(c, 1)
c
c <- numeric()
c
source('~/corr.R')
corr("specdata", 150)
source('~/corr.R')
corr("specdata", 150)
source('~/corr.R')
corr("specdata", 150)
source('~/corr.R')
corr("specdata", 150)
source('~/corr.R')
corr("specdata", 150)
source('~/corr.R')
corr("specdata", 150)
corr("specdata", 150)
source('~/corr.R')
corr("specdata", 150)
source('~/corr.R')
corr("specdata", 150)
head(corr("specdata", 150))
cr <- corr("specdata", 400)
head(cr)
summary(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit
submit()
submit()
submit()
source('~/corr.R')
submit
submit()
x <- numeric(0)
length(x)
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata")
summary(cr)
submit()
source('~/corr.R')
submit()
install.packages("httr")
library(httr)
my_app <- oauth_app("github", key = "7ff9ebb48c1c0d622935", secret = "f7f58e24732c701084354541f48299977df77ee6")
git_token <- oautho2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httpuv)
git_token <- oautho2.0_token(oauth_endpoints("github"), myapp)
git_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
git_token <- oauth2.0_token(oauth_endpoints("github"), my_app)
req<- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
req<- GET("https://api.github.com/users/jtleek/repos", config(token = git_token))
git_token <- oauth2.0_token(oauth_endpoints("github"), my_app)
source('~/oauth2.R')
install.packages("httr")
library(httr)
install.packages("httpuv")
library(httpuv)
install.packages("jsonlite")
library(jsonlite)
myapp <- oauth_app("github", key = "7ff9ebb48c1c0d622935", secret = "f7f58e24732c701084354541f48299977df77ee6")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app("github", key = "5be0f85984274fb591c5", secret = "20c372e297cdbc7918748f84116a45d8205500f5")
github_token <- oauth2.0_token(oauth_endpoints("github"), mapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = "github_token"))
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
json1 <- content(req)
json2 <- jsonlite::fromJSON(toJSON(json1))
json2
View(json2)
View(json2)
json2.names()
names(json2)
json2$created_at
json2["datasharing", "created_at"]
json2$datasharing$created_at
json2[datasharing]
json2["datasharing"]
json2["datasharing",]
names(json)
names(json2)
json2$created_at
json2$datasharing
read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", method = curl)
acs <- read.csv("getdata_data_ss06pid.csv")
install.packages("sqldf")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
x <- sqldf("select pwtgp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
library(httr)
html2 = GET(http://biostat.jhsph.edu/~jleek/contact.html)
html2 = GET("http://biostat.jhsph.edu/~jleek/contact.html")
content2 = content(html2, as = "text")
parseHTML = htmlParse(content2, asText = TRUE)
library(XML)
parseHTML = htmlParse(content2, asText = TRUE)
xpathSApply(parseHTML, //"title", xmlValues)
xpathSApply(parseHTML, "//title", xmlValues)
xpathSApply(parseHTML, "//title", xmlValue)
parseHTML
xpathSApply(parseHTML, "10", xmlValue)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
x <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
x <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", skip = 4, widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
sum(x[,4])
if (!file.exists("./data")) {}
if (!file.exists("./data")) {dir.create"./data"}
if (!file.exists("./data")) {dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/communityData.csv", method = "curl")
library(curl)
install.packages("curl")
library(curl)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/communityData.csv")
commData <- read.csv("./data/communityData.csv")
head(commData)
?head
head(commData, n = 2)
head(commData, n =1)
con1 <- commData$ACR == 3
con2 <- commData$AGS == 6
agricultureLogical <- commData$ACR == 3 & commData$AGS ==6
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile = "./data/pic.jpeg")
currPic <- readJPEG("./data/pic.jpeg", native = TRUE)
download.file(fileUrl, destfile = "./data/pic.jpeg", mode = "wb")
currPic <- readJPEG("./data/pic.jpeg", native = TRUe)
currPic <- readJPEG("./data/pic.jpeg", native = TRUE)
?quantile
quantile(currPic, probs = c(.3, .8))
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./data/GDP.csv")
gdpData <- read.csv("./data/GDP.csv")
?rm
rm(agricultureLogical)
rm(con1)
rm(con2)
rm(currPic)
rm(commData)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
file.download(fileUrl, destfile = "./data/Education.csv", method = "curl")
download.file(fileUrl, destfile = "./data/Education.csv", method = "curl")
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, destfile = "./data/Education.csv")
eduData <- read.csv("./data/Education.csv")
head(gdpData)
head(gdpData)
head(eduData)
edit(gdpData)
edit(eduData)
edit(gdpData)
gdpData2 <- gdpData[!is.na(gdpData$X)]
gdpData$X
is.na(gdpData$X)
any(is.na(gdpData$X))
gdpData[1,X]
gdpData[1,gdpData$X]
gdpData[1,1]
str(gdpData)
gdpData2 <- read.csv("./data/GDP.csv", stringsAsFactors = FALSE, header = FALSE)
gdpData2
edit(gdpData2)
head(gdpData2)
tail(gdpData2)
gdpData2 <- read.csv("./data/GDP.csv", stringsAsFactors = FALSE)
head(gdpData2)
tail(gdpData2)
any(is.na(gdpData2))
gdpData2$X
cleanGDP <- gdpData2[!is.na(gdpData2$X)]
cleanGDP <- gdpData2[,!is.na(gdpData2$X)]
cleanGDP <- gdpData2[!is.na(gdpData2$X),]
any(is.na(cleanGDP$X))
head(cleanGDP)
cleanGDP$X
gdpData <- read.csv("./data/GDP.csv", stringsAsFactors = FALSE)
class(gdpData$X)
class(gdpData[1,1])
gdpData[1,1]
gdpData[1:7,]
is.na(gdpData[1,1])
"" = gdpData[1,1]
x <- ""
x = gdpData[1,1]
class(gdpData[[1,1]])
is.na(gdpData[[1,1]])
gdpData[5:195,]
gdpData2 <- gdpData[5:194,]
editgdpData2
edit(gdpData2)
nrows(gdpData2$X)
nrows(gdpData2$X)
nrow(gdpData2$X)
gdpData2$x
gdpData2$X
nrow(gdpData2)
eduData <- read.csv("./data/Education.csv", StringsAsFactors = FALSE)
eduData <- read.csv("./data/Education.csv", stringsAsFactors = FALSE)
head(eduData)
class(eduData$CountryCode)
tail(eduData)
mergeData <- merge(gdpData2, eduData, by.x = "X", by.y = "CountryCode")
edit(mergeData)
class(mergeData$gdp)
head(mergeData)
colnames(mergeData)
?sort
sorted <- sort(mergeData$Gross.domestic.product.2012, decreasing = TRUE)
edit(sorted)
sorted[13,]
sorted
?order
sorted <- mergeData[order(mergeData$Gross.domestic.product.2012, decreasing = TRUE)]
sorted <- mergeData[order(mergeData$Gross.domestic.product.2012, decreasing = TRUE),]
sorted[13,]
sorted <- mergeData[order(mergeData$Gross.domestic.product.2012),]
sorted[13,]
sorted <- mergeData[order(mergeData$Gross.domestic.product.2012, decreasing = TRUE),]
sorted[14,]
sorted[12,]
class(mergeData$Gross.domestic.product.2012)
mergeData$Gross.domestic.product.2012 <- as.numeric(as.character(mergeData$Gross.domestic.product.2012))
sorted <- mergeData[order(mergeData$Gross.domestic.product.2012, decreasing = TRUE),]
sorted[13,]
colNames(mergeDat)
colnames(mergeData)
mergeData$Income.Group
mergeData$Other.group
class(mergeData$Income.Group)
?split
gdpByIncome <- split(mergeData$Gross.domestic.product.2012, mergeData$Income.Group)
gdpByIncome
?ave
mean(gdpByIncome$High income nonOECD)
mean(gdpByIncome$"High income: nonOECD")
mean(gdpByIncome$"High income: OECD")
?cut
quantile(mergeData)
quantile(mergeData$Gross.domestic.product.2012)
mergeData[1,]
mergeData[189,]
sorted[189,]
quantile(sorted$Gross.domestic.product.2012)
cutData <- table(sorted$Gross.domestic.product.2012, sorted$Income.Group)
cutData
cut1 <- sorted[189:151,]
cu2 <- cut1$Income.Group = "Lower middle income"
cut1 <- sorted[189:152]
cut1 <- sorted[189:152,]
cut1$Income.Group
pwd()
pwd
getwd()
files.list
files.list()
list.files()
setwd(ProgrammingAssignment2)
setwd("ProgrammingAssignment2")
list.files
list.files()
load(cachematrix.R)
